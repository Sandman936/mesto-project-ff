{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto.project/./src/components/card.js","webpack://mesto.project/./src/components/modal.js","webpack://mesto.project/./src/components/validation.js","webpack://mesto.project/./src/components/api.js","webpack://mesto.project/./src/scripts/index.js"],"sourcesContent":["//Функция создания карточки\r\n\r\nexport const createCard = (card, cardOwner, isLiked, removeCardModal, likeClick, openImage, likeDataPut, likeDataDelete) => {\r\n    const cardsTemplate = document.querySelector(\"#card-template\").content;\r\n    const cardElement = cardsTemplate.querySelector(\".places__item\").cloneNode(true);\r\n    const cardImage = cardElement.querySelector(\".card__image\");\r\n    const cardTitle = cardElement.querySelector(\".card__title\");\r\n    const removeButton = cardElement.querySelector(\".card__delete-button\");\r\n    const likeButton = cardElement.querySelector(\".card__like-button\");\r\n    const likeValue = cardElement.querySelector(\".card__like-counter\");\r\n\r\n    cardTitle.textContent = card.name;\r\n    cardImage.src = card.link;\r\n    cardImage.alt = card.name;\r\n    likeValue.textContent = card.likes.length;\r\n\r\n    if (cardOwner) {\r\n        removeButton.addEventListener(\"click\", function (evt) {\r\n            removeCardModal(evt, card);\r\n        });\r\n    } else {\r\n        removeButton.remove();\r\n    }\r\n    \r\n    if (isLiked) {\r\n        likeButton.classList.add(\"card__like-button_is-active\");\r\n    } else {\r\n        likeButton.classList.remove(\"card__like-button_is-active\");\r\n    };\r\n\r\n    likeButton.addEventListener(\"click\", function (event) {\r\n        likeClick(event, card._id, isLiked, likeButton, likeValue, likeDataPut, likeDataDelete);\r\n    });\r\n\r\n    cardImage.addEventListener(\"click\", () => openImage(card));\r\n\r\n    return cardElement;\r\n};\r\n\r\n//Обработчик удаления карточки\r\n\r\nexport function removeCard (cardElement) {\r\n    cardElement.remove();\r\n}\r\n\r\n//Функция обработки лайка\r\n\r\nexport function handleLikeClick (event, cardId, isLiked, likeButton, likeCounter, likeDataPut, likeDataDelete) {\r\n    if (event.target.classList.contains(\"card__like-button_is-active\")) {\r\n        likeDataDelete(cardId)\r\n        .then( (res) => {\r\n            likeButton.classList.remove(\"card__like-button_is-active\");\r\n            likeCounter.textContent = res.likes.length;\r\n        })\r\n        .catch( (err) => {\r\n        console.error(err);\r\n        });\r\n    } else {\r\n        likeDataPut(cardId)\r\n        .then( (res) => {\r\n            likeButton.classList.add(\"card__like-button_is-active\");\r\n            likeCounter.textContent = res.likes.length;\r\n        })\r\n        .catch( (err) => {\r\n        console.error(err);\r\n        });\r\n    }\r\n    \r\n};","//Открытие модального окна\r\n\r\nexport function openModal (popupElement) {\r\n    popupElement.classList.add(\"popup_is-opened\");\r\n    window.addEventListener(\"keydown\", handleEscapePress);\r\n};\r\n\r\n//Закрытие модального окна\r\n\r\nexport function closeModal (popupElement) {\r\n    popupElement.classList.remove(\"popup_is-opened\");\r\n    window.removeEventListener(\"keydown\", handleEscapePress);\r\n};\r\n\r\n//Обработчики событий закрытия модального окна\r\n\r\nexport function handleOverlayClick (event) {\r\n    if (event.target === event.currentTarget) {\r\n        closeModal(event.currentTarget);\r\n    };\r\n};\r\n\r\nfunction handleEscapePress (event) {\r\n    if (event.key === \"Escape\") {\r\n        const currentPopup = document.querySelector(\".popup_is-opened\");\r\n\r\n        closeModal(currentPopup);\r\n    };\r\n};","//Функция активации валидации\r\n\r\nexport function enableValidation (validationConfig) {\r\n    const formList = Array.from(document.querySelectorAll(validationConfig.formSelector));\r\n\r\n    formList.forEach( (formElement) => {\r\n        setEventListeners(formElement, validationConfig);\r\n    });\r\n};\r\n\r\n//Функция очистки ошибок валидации\r\n\r\nexport function clearValidation (formElement, validationConfig) {\r\n    const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n    const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n\r\n    inputList.forEach( (inputElement) => {\r\n        hideInputError(formElement, inputElement, validationConfig);\r\n    });\r\n    formElement.reset();\r\n    toggleButtonState(inputList, buttonElement, validationConfig);\r\n};\r\n\r\n//Установка слушателей при вводе\r\n\r\nfunction setEventListeners (formElement, validationConfig) {\r\n    const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n    const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n\r\n    inputList.forEach( (inputElement) => {\r\n        inputElement.addEventListener(\"input\", function () {\r\n            formIsValid(formElement, inputElement, validationConfig);\r\n            toggleButtonState(inputList, buttonElement, validationConfig);\r\n        });\r\n    });\r\n};\r\n\r\n//Функция проверки на валидность формы\r\n\r\nfunction formIsValid (formElement, inputElement, validationConfig) {\r\n    if (inputElement.validity.patternMismatch) {\r\n        inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n    } else {\r\n        inputElement.setCustomValidity(\"\");\r\n    }\r\n    \r\n    if (!inputElement.validity.valid) {\r\n        showInputError(formElement, inputElement, validationConfig, inputElement.validationMessage);\r\n    } else {\r\n        hideInputError(formElement, inputElement, validationConfig);\r\n    }\r\n};\r\n\r\n//Функция вывода ошибки\r\n\r\nfunction showInputError (formElement, inputElement, validationConfig, errorMessage) {\r\n    const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n\r\n    inputElement.classList.add(validationConfig.inputErrorClass);\r\n    errorElement.classList.add(validationConfig.errorClass);\r\n    errorElement.textContent = errorMessage;\r\n};\r\n\r\n//Функция скрытия ошибки\r\n\r\nfunction hideInputError (formElement, inputElement, validationConfig) {\r\n    const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n\r\n    inputElement.classList.remove(validationConfig.inputErrorClass);\r\n    errorElement.classList.remove(validationConfig.errorClass);\r\n    errorElement.textContent = \"\";\r\n};\r\n\r\n//Функция проверки валидности нескольких полей ввода\r\n\r\nfunction hasInvalidInput (inputList) {\r\n    return inputList.some((inputElement) => {\r\n        return !inputElement.validity.valid;\r\n    })\r\n};\r\n\r\n//Функция определения состояния кнопки\r\n\r\nfunction toggleButtonState (inputList, buttonElement, validationConfig) {\r\n    if ( hasInvalidInput(inputList)) {\r\n        buttonElement.disabled = true;\r\n        buttonElement.classList.add(validationConfig.inactiveButtonClass);\r\n    } else {\r\n        buttonElement.disabled = false;\r\n        buttonElement.classList.remove(validationConfig.inactiveButtonClass);\r\n    }\r\n};\r\n","//Конфиг отправки запроса\r\n\r\nconst config = {\r\n    baseUrl: 'https://nomoreparties.co/v1/wff-cohort-8',\r\n    headers: {\r\n      authorization: '16d9fcd2-6486-4fff-bda9-31ea0dd0b509',\r\n      'Content-Type': 'application/json'\r\n    }\r\n};\r\n\r\n//Функция проверки ответа\r\n\r\nfunction handleResponse (result) {\r\n    if (result.ok) {\r\n        return result.json();\r\n    }\r\n\r\n    return Promise.reject(`Код ошибки: ${result.status}`);\r\n};\r\n\r\n//Получение данных профиля с сервера\r\n\r\nfunction profileInit () {\r\n    return fetch(`${config.baseUrl}/users/me`, {\r\n        headers: config.headers\r\n    })\r\n    .then( (res) => {\r\n        return handleResponse(res);\r\n    })\r\n};\r\n\r\n//Получение карточек с сервера\r\n\r\nfunction cardsInit () {\r\n    return fetch(`${config.baseUrl}/cards`, {\r\n        headers: config.headers\r\n    })\r\n    .then( (res) => {\r\n        return handleResponse(res);\r\n    })\r\n};\r\n\r\n//Проверка получения данных с сервера\r\n\r\nexport function dataInit () {\r\n    return Promise.all([profileInit(), cardsInit()]);\r\n};\r\n\r\n//Обновление информации профиля на сервере\r\n\r\nexport function profileDataPatch (profileName, profileAbout) {\r\n    return fetch(`${config.baseUrl}/users/me`, {\r\n        method: 'PATCH',\r\n        headers: config.headers,\r\n        body: JSON.stringify({\r\n            name: profileName,\r\n            about: profileAbout\r\n          })\r\n    })\r\n    .then( (res) => {\r\n        return handleResponse(res);\r\n    })\r\n};\r\n\r\n//Отправка новой карточки на сервер\r\n\r\nexport function newCardDataPost (cardName, cardLink) {\r\n    return fetch(`${config.baseUrl}/cards`, {\r\n        method: 'POST',\r\n        headers: config.headers,\r\n        body: JSON.stringify({\r\n            name: cardName,\r\n            link: cardLink\r\n          })\r\n    })\r\n    .then( (res) => {\r\n        return handleResponse(res);\r\n    })\r\n};\r\n\r\n//Удаление карточки с сервера\r\n\r\nexport function removeCardDataDelete (cardId) {\r\n    return fetch(`${config.baseUrl}/cards/${cardId}`, {\r\n        method: 'DELETE',\r\n        headers: config.headers\r\n    })\r\n    .then( (res) => {\r\n        return handleResponse(res);\r\n    })\r\n};\r\n\r\n//Лайк карточки\r\n\r\nexport function likeCardDataPut (cardId) {\r\n    return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n        method: 'PUT',\r\n        headers: config.headers\r\n    })\r\n    .then( (res) => {\r\n        return handleResponse(res);\r\n    })\r\n};\r\n\r\n//Снятие лайка карточки\r\n\r\nexport function likeCardDataDelete (cardId) {\r\n    return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n        method: 'DELETE',\r\n        headers: config.headers\r\n    })\r\n    .then( (res) => {\r\n        return handleResponse(res);\r\n    })\r\n};\r\n\r\n//Обновление аватара профиля\r\n\r\nexport function profileAvatarDataPatch (link) {\r\n    return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n        method: 'PATCH',\r\n        headers: config.headers,\r\n        body: JSON.stringify({\r\n            avatar: link\r\n          })\r\n    })\r\n    .then( (res) => {\r\n        return handleResponse(res);\r\n    })\r\n};","import \"../pages/index.css\";\r\nimport { createCard, handleLikeClick, removeCard} from \"../components/card.js\";\r\nimport { openModal, closeModal, handleOverlayClick } from \"../components/modal.js\";\r\nimport { enableValidation, clearValidation} from \"../components/validation.js\";\r\nimport { dataInit, profileDataPatch, newCardDataPost, removeCardDataDelete, likeCardDataPut, likeCardDataDelete, profileAvatarDataPatch } from \"../components/api.js\";\r\n\r\n//Глобальные переменные\r\n\r\nconst cardsList = document.querySelector(\".places__list\");\r\nlet removeCardData;\r\nlet removeCardElement;\r\n\r\n//Объект конфига валидации\r\n\r\nconst validationConfig = {\r\n    formSelector: '.popup__form',\r\n    inputSelector: '.popup__input',\r\n    submitButtonSelector: '.popup__button',\r\n    inactiveButtonClass: 'popup__button_disabled',\r\n    inputErrorClass: 'popup__input_type_error',\r\n    errorClass: 'popup__error_visible'\r\n};\r\n\r\n//Триггеры открытия попапов\r\n\r\nconst addCardButton = document.querySelector(\".profile__add-button\");\r\nconst editProfileButton = document.querySelector(\".profile__edit-button\");\r\nconst editProfileAvatarButton = document.querySelector(\".profile__image\");\r\n\r\n//Попапы\r\n\r\nconst popups = document.querySelectorAll(\".popup\");\r\nconst popupAvatar = document.querySelector(\".popup_type_avatar\");\r\nconst popupEdit = document.querySelector(\".popup_type_edit\");\r\nconst popupAddCard = document.querySelector(\".popup_type_new-card\");\r\nconst popupImageWindow = document.querySelector(\".popup_type_image\");\r\nconst popupImage = popupImageWindow.querySelector(\".popup__image\");\r\nconst popupImageCaption = popupImageWindow.querySelector(\".popup__caption\");\r\nconst popupDeleteCard = document.querySelector(\".popup_type_conformation\");\r\nconst deleteCardConfirmButton = popupDeleteCard.querySelector(\".popup_confirm-button\");\r\n\r\n//Переменные форм\r\n\r\nconst avatarForm = document.forms.editAvatar;\r\nconst avatarInputLink = avatarForm.link;\r\nconst editForm = document.forms.editProfile;\r\nconst editInputName = editForm.name;\r\nconst editInputDesc = editForm.description;\r\nconst addCardForm = document.forms.newPlace;\r\nconst addCardInputName = addCardForm.placeName;\r\nconst addCardInputLink = addCardForm.link;\r\n\r\n//Переменные профиля\r\n\r\nconst profileInfoAvatar = document.querySelector(\".profile__image\");\r\nconst profileInfoName = document.querySelector(\".profile__title\");\r\nconst profileInfoDesc = document.querySelector(\".profile__description\");\r\n\r\n//Модальное окно картинки карточки\r\n\r\nfunction openImageModal (card) {\r\n    popupImageCaption.textContent = card.name;\r\n    popupImage.src = card.link;\r\n    popupImage.alt = card.name;\r\n\r\n    openModal(popupImageWindow);\r\n};\r\n\r\n//Вывести карточки на страницу\r\n\r\nconst renderCard = (card, cardOwner, isLiked) => {\r\n    const newCard = createCard(card, cardOwner, isLiked, openRemoveCardModal, handleLikeClick, openImageModal, likeCardDataPut, likeCardDataDelete);\r\n\r\n    cardsList.append(newCard);\r\n};\r\n\r\n//Создание новой карточки\r\n\r\nconst createNewCard = (card, cardOwner) => {\r\n    const newCard = createCard(card, cardOwner, false, openRemoveCardModal, handleLikeClick, openImageModal, likeCardDataPut, likeCardDataDelete);\r\n\r\n    cardsList.prepend(newCard);\r\n};\r\n\r\n//Слушатели событий\r\n\r\neditProfileAvatarButton.addEventListener(\"click\", function () {\r\n    openModal(popupAvatar);\r\n    avatarForm.reset();\r\n    clearValidation(avatarForm, validationConfig);\r\n});\r\n\r\naddCardButton.addEventListener(\"click\", function () {\r\n    openModal(popupAddCard);\r\n    addCardForm.reset();\r\n    clearValidation(addCardForm, validationConfig);\r\n});\r\n\r\neditProfileButton.addEventListener(\"click\", function () {\r\n    openModal(popupEdit);\r\n    clearValidation(editForm, validationConfig);\r\n    editProfileformInit();\r\n});\r\n\r\ndeleteCardConfirmButton.addEventListener(\"click\", function () {\r\n    removeCardDataDelete(removeCardData._id)\r\n    .then(removeCard(removeCardElement))\r\n    .catch( (err) => {\r\n    console.error(err);\r\n    });\r\n    closeModal(popupDeleteCard);\r\n});\r\n\r\n//Функция открытия модального окна удаления карточки\r\n\r\nfunction openRemoveCardModal (evt, card) {\r\n    removeCardData = card;\r\n    removeCardElement = evt.target.closest(\".card\");\r\n\r\n    openModal(popupDeleteCard);\r\n};\r\n\r\n//Слушатели закрытия модального окна\r\n\r\npopups.forEach( (popup) => {\r\n    const popupCloseButton =  popup.querySelector(\".popup__close\");\r\n\r\n    popupCloseButton.addEventListener(\"click\", function () {\r\n        closeModal(popup);\r\n    });\r\n    popup.addEventListener(\"mousedown\", handleOverlayClick);\r\n});\r\n\r\n//Слушатели отправки формы\r\n\r\neditForm.addEventListener('submit', handleEditProfileFormSubmit);\r\n\r\naddCardForm.addEventListener('submit', handleAddCardFormSubmit);\r\n\r\navatarForm.addEventListener('submit', handleEditAvatarSubmit);\r\n\r\n//Иницилизация формы\r\n\r\nfunction editProfileformInit () {\r\n    editInputName.value = profileInfoName.textContent;\r\n    editInputDesc.value = profileInfoDesc.textContent;\r\n};\r\n\r\n//Обработчики отправки форм\r\n\r\nfunction handleEditProfileFormSubmit (event) {\r\n    const currentButton = popupEdit.querySelector(\".button\");\r\n    \r\n    event.preventDefault();\r\n    currentButton.textContent = \"Сохранение...\"\r\n    profileDataPatch(editInputName.value, editInputDesc.value)\r\n    .then( (res) => {\r\n        profileInfoName.textContent = res.name;\r\n        profileInfoDesc.textContent = res.about;\r\n    })\r\n    .catch( (err) => {\r\n        console.error(err);\r\n    })\r\n    .finally( () => {\r\n        currentButton.textContent = \"Сохранение\";\r\n        closeModal(popupEdit);\r\n    })\r\n};\r\n\r\nfunction handleAddCardFormSubmit (event) {\r\n    const currentButton = popupAddCard.querySelector('.button');\r\n    \r\n    event.preventDefault();\r\n    currentButton.textContent = \"Сохранение...\";\r\n    newCardDataPost(addCardInputName.value, addCardInputLink.value)\r\n    .then( (res) => {\r\n        createNewCard(res, true);\r\n    })\r\n    .catch( (err) => {\r\n    console.error(err);\r\n    })\r\n    .finally( () => {\r\n        currentButton.textContent = \"Сохранение\";\r\n        closeModal(popupAddCard);\r\n    })\r\n};\r\n\r\nfunction handleEditAvatarSubmit (event) {\r\n    const currentButton = popupAvatar.querySelector(\".button\");\r\n    \r\n    event.preventDefault();\r\n    currentButton.textContent = \"Сохранение...\";\r\n    profileAvatarDataPatch(avatarInputLink.value)\r\n    .then( (res) => {\r\n        profileInfoAvatar.setAttribute('style', `background-image: url(${res.avatar})`);\r\n    })\r\n    .catch( (err) => {\r\n        console.error(err);\r\n    })\r\n    .finally( () => {\r\n        currentButton.textContent = \"Сохранение\";\r\n        closeModal(popupAvatar);\r\n    })\r\n};\r\n\r\n//Активация валидации форм\r\n\r\nenableValidation(validationConfig);\r\n\r\n//Иницилизация данных страницы\r\n\r\ndataInit()\r\n.then( ([profileData, cardsData]) => {\r\n    profileInfoAvatar.setAttribute(\"style\", `background-image: url(${profileData.avatar})`);\r\n    profileInfoName.textContent = profileData.name;\r\n    profileInfoDesc.textContent = profileData.about;\r\n\r\n    cardsData.forEach( (card) => {\r\n        const ownedCard = profileData._id === card.owner._id;\r\n        const likeId = (like) => like._id === profileData._id;\r\n        const isLiked = card.likes.some(likeId);\r\n\r\n        renderCard(card, ownedCard, isLiked);\r\n    })\r\n})\r\n.catch( (err) => {\r\n    console.error(err);\r\n});"],"names":["createCard","card","cardOwner","isLiked","removeCardModal","likeClick","openImage","likeDataPut","likeDataDelete","cardElement","document","querySelector","content","cloneNode","cardImage","cardTitle","removeButton","likeButton","likeValue","textContent","name","src","link","alt","likes","length","addEventListener","evt","remove","classList","add","event","_id","handleLikeClick","cardId","likeCounter","target","contains","then","res","catch","err","console","error","openModal","popupElement","window","handleEscapePress","closeModal","removeEventListener","handleOverlayClick","currentTarget","key","clearValidation","formElement","validationConfig","inputList","Array","from","querySelectorAll","inputSelector","buttonElement","submitButtonSelector","forEach","inputElement","hideInputError","reset","toggleButtonState","errorElement","concat","id","inputErrorClass","errorClass","some","validity","valid","hasInvalidInput","disabled","inactiveButtonClass","config","baseUrl","headers","authorization","handleResponse","result","ok","json","Promise","reject","status","likeCardDataPut","fetch","method","likeCardDataDelete","removeCardData","removeCardElement","cardsList","formSelector","addCardButton","editProfileButton","editProfileAvatarButton","popups","popupAvatar","popupEdit","popupAddCard","popupImageWindow","popupImage","popupImageCaption","popupDeleteCard","deleteCardConfirmButton","avatarForm","forms","editAvatar","avatarInputLink","editForm","editProfile","editInputName","editInputDesc","description","addCardForm","newPlace","addCardInputName","placeName","addCardInputLink","profileInfoAvatar","profileInfoName","profileInfoDesc","openImageModal","openRemoveCardModal","closest","value","popup","profileName","profileAbout","currentButton","preventDefault","body","JSON","stringify","about","finally","cardName","cardLink","newCard","prepend","avatar","setAttribute","patternMismatch","setCustomValidity","dataset","errorMessage","showInputError","validationMessage","formIsValid","setEventListeners","enableValidation","all","_ref","_ref2","profileData","cardsData","ownedCard","owner","like","append","renderCard"],"sourceRoot":""}