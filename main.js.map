{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto.project/./src/components/card.js","webpack://mesto.project/./src/components/modal.js","webpack://mesto.project/./src/components/validation.js","webpack://mesto.project/./src/components/api.js","webpack://mesto.project/./src/scripts/index.js"],"sourcesContent":["//Функция создания карточки\r\n\r\nexport const createCard = (card, cardOwner, isLiked, removeCardModal, likeClick, imageOpen, likeDataPut, likeDataDelete) => {\r\n    const cardsTemplate = document.querySelector(\"#card-template\").content;\r\n    const cardElement = cardsTemplate.querySelector(\".places__item\").cloneNode(true);\r\n    const cardImage = cardElement.querySelector(\".card__image\");\r\n    const cardTitle = cardElement.querySelector(\".card__title\");\r\n    const removeButton = cardElement.querySelector(\".card__delete-button\");\r\n    const likeButton = cardElement.querySelector(\".card__like-button\");\r\n    const likeValue = cardElement.querySelector(\".card__like-counter\");\r\n\r\n    cardTitle.textContent = card.name;\r\n    cardImage.src = card.link;\r\n    cardImage.alt = card.name;\r\n    likeValue.textContent = card.likes.length;\r\n\r\n    if (cardOwner) {\r\n        removeButton.addEventListener(\"click\", function (evt) {\r\n            removeCardModal(evt, card);\r\n        });\r\n    } else {\r\n        removeButton.remove();\r\n    }\r\n    \r\n    if (isLiked) {\r\n        likeButton.classList.add(\"card__like-button_is-active\");\r\n    } else {\r\n        likeButton.classList.remove(\"card__like-button_is-active\");\r\n    };\r\n\r\n    likeButton.addEventListener(\"click\", function (event) {\r\n        likeClick(event, card._id, isLiked, likeButton, likeValue, likeDataPut, likeDataDelete);\r\n    });\r\n\r\n    cardImage.addEventListener(\"click\", () => imageOpen(card));\r\n\r\n    return cardElement;\r\n};\r\n\r\n//Обработчик удаления карточки\r\n\r\nexport function removeCard (cardElement) {\r\n    cardElement.remove();\r\n}\r\n\r\n//Функция обработки лайка\r\n\r\nexport function handleLikeClick (event, cardId, isLiked, likeButton, likeCounter, likeDataPut, likeDataDelete) {\r\n    if (event.target.classList.contains(\"card__like-button_is-active\")) {\r\n        likeDataDelete(cardId)\r\n        .then( (res) => {\r\n            likeButton.classList.remove(\"card__like-button_is-active\");\r\n            likeCounter.textContent = res.likes.length;\r\n        })\r\n        .catch( (err) => {\r\n        console.error(err);\r\n        });\r\n    } else {\r\n        likeDataPut(cardId)\r\n        .then( (res) => {\r\n            likeButton.classList.add(\"card__like-button_is-active\");\r\n            likeCounter.textContent = res.likes.length;\r\n        })\r\n        .catch( (err) => {\r\n        console.error(err);\r\n        });\r\n    }\r\n    \r\n};","//Открытие модального окна\r\n\r\nexport function openModal (popupElement) {\r\n    popupElement.classList.add(\"popup_is-opened\");\r\n    window.addEventListener(\"keydown\", handleEscapePress);\r\n};\r\n\r\n//Закрытие модального окна\r\n\r\nexport function closeModal (popupElement) {\r\n    popupElement.classList.remove(\"popup_is-opened\");\r\n    window.removeEventListener(\"keydown\", handleEscapePress);\r\n};\r\n\r\n//Обработчики событий закрытия модального окна\r\n\r\nexport function handleOverlayClick (event) {\r\n    if (event.target === event.currentTarget) {\r\n        closeModal(event.currentTarget);\r\n    };\r\n};\r\n\r\nfunction handleEscapePress (event) {\r\n    if (event.key === \"Escape\") {\r\n        const currentPopup = document.querySelector(\".popup_is-opened\");\r\n\r\n        closeModal(currentPopup);\r\n    };\r\n};","//Функция активации валидации\r\n\r\nexport function enableValidation (validationConfig) {\r\n    const formList = Array.from(document.querySelectorAll(validationConfig.formSelector));\r\n\r\n    formList.forEach( (formElement) => {\r\n        setEventListeners(formElement, validationConfig);\r\n    });\r\n};\r\n\r\n//Функция очистки ошибок валидации\r\n\r\nexport function clearValidation (formElement, validationConfig) {\r\n    const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n    const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n\r\n    inputList.forEach( (inputElement) => {\r\n        hideInputError(formElement, inputElement, validationConfig);\r\n    });\r\n    toggleButtonState(inputList, buttonElement, validationConfig);\r\n};\r\n\r\n//Установка слушателей при вводе\r\n\r\nfunction setEventListeners (formElement, validationConfig) {\r\n    const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n    const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n\r\n    inputList.forEach( (inputElement) => {\r\n        inputElement.addEventListener(\"input\", function () {\r\n            formIsValid(formElement, inputElement, validationConfig);\r\n            toggleButtonState(inputList, buttonElement, validationConfig);\r\n        });\r\n    });\r\n};\r\n\r\n//Функция проверки на валидность формы\r\n\r\nfunction formIsValid (formElement, inputElement, validationConfig) {\r\n    if (inputElement.validity.patternMismatch) {\r\n        inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n    } else {\r\n        inputElement.setCustomValidity(\"\");\r\n    }\r\n    \r\n    if (!inputElement.validity.valid) {\r\n        showInputError(formElement, inputElement, validationConfig, inputElement.validationMessage);\r\n    } else {\r\n        hideInputError(formElement, inputElement, validationConfig);\r\n    }\r\n};\r\n\r\n//Функция вывода ошибки\r\n\r\nfunction showInputError (formElement, inputElement, validationConfig, errorMessage) {\r\n    const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n\r\n    inputElement.classList.add(validationConfig.inputErrorClass);\r\n    errorElement.classList.add(validationConfig.errorClass);\r\n    errorElement.textContent = errorMessage;\r\n};\r\n\r\n//Функция скрытия ошибки\r\n\r\nfunction hideInputError (formElement, inputElement, validationConfig) {\r\n    const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n\r\n    inputElement.classList.remove(validationConfig.inputErrorClass);\r\n    errorElement.classList.remove(validationConfig.errorClass);\r\n    errorElement.textContent = \"\";\r\n};\r\n\r\n//Функция проверки валидности нескольких полей ввода\r\n\r\nfunction hasInvalidInput (inputList) {\r\n    return inputList.some((inputElement) => {\r\n        return !inputElement.validity.valid;\r\n    })\r\n};\r\n\r\n//Функция определения состояния кнопки\r\n\r\nfunction toggleButtonState (inputList, buttonElement, validationConfig) {\r\n    if ( hasInvalidInput(inputList)) {\r\n        buttonElement.disabled = true;\r\n        buttonElement.classList.add(validationConfig.inactiveButtonClass);\r\n    } else {\r\n        buttonElement.disabled = false;\r\n        buttonElement.classList.remove(validationConfig.inactiveButtonClass);\r\n    }\r\n};\r\n","//\r\n\r\nconst config = {\r\n    baseUrl: 'https://nomoreparties.co/v1/wff-cohort-8',\r\n    headers: {\r\n      authorization: '16d9fcd2-6486-4fff-bda9-31ea0dd0b509',\r\n      'Content-Type': 'application/json'\r\n    }\r\n}\r\n\r\n//Получение данных профиля с сервера\r\n\r\nfunction profileInit () {\r\n    return fetch(`${config.baseUrl}/users/me`, {\r\n        headers: config.headers\r\n    })\r\n    .then( (res) => {\r\n        if (res.ok) {\r\n            return res.json();\r\n        }\r\n\r\n        return Promise.reject(`Код ошибки: ${res.status}`);\r\n    })\r\n    .catch((err) => {\r\n        console.error(err);\r\n    });\r\n};\r\n\r\n//Получение карточек с сервера\r\n\r\nfunction cardsInit () {\r\n    return fetch(`${config.baseUrl}/cards`, {\r\n        headers: config.headers\r\n    })\r\n    .then( (res) => {\r\n        if (res.ok) {\r\n            return res.json();\r\n        }\r\n\r\n        return Promise.reject(`Код ошибки: ${res.status}`);\r\n    })\r\n    .catch((err) => {\r\n        console.error(err);\r\n    });\r\n};\r\n\r\n//Проверка получения данных с сервера\r\n\r\nexport function dataInit () {\r\n    return Promise.all([profileInit(), cardsInit()]);\r\n};\r\n\r\n//Обновление информации профиля на сервере\r\n\r\nexport function profileDataPatch (profileName, profileAbout) {\r\n    return fetch(`${config.baseUrl}/users/me`, {\r\n        method: 'PATCH',\r\n        headers: config.headers,\r\n        body: JSON.stringify({\r\n            name: profileName,\r\n            about: profileAbout\r\n          })\r\n    })\r\n    .then( (res) => {\r\n        if (res.ok) {\r\n            return res.json();\r\n        }\r\n\r\n        return Promise.reject(`Код ошибки: ${res.status}`);\r\n    })\r\n    .catch((err) => {\r\n        console.error(err);\r\n    });\r\n};\r\n\r\n//Отправка новой карточки на сервер\r\n\r\nexport function newCardDataPost (cardName, cardLink) {\r\n    return fetch(`${config.baseUrl}/cards`, {\r\n        method: 'POST',\r\n        headers: config.headers,\r\n        body: JSON.stringify({\r\n            name: cardName,\r\n            link: cardLink\r\n          })\r\n    })\r\n    .then( (res) => {\r\n        if (res.ok) {\r\n            return res.json();\r\n        }\r\n\r\n        return Promise.reject(`Код ошибки: ${res.status}`);\r\n    })\r\n    .catch((err) => {\r\n        console.error(err);\r\n    });\r\n};\r\n\r\n//Удаление карточки с сервера\r\n\r\nexport function removeCardDataDelete (cardId) {\r\n    return fetch(`${config.baseUrl}/cards/${cardId}`, {\r\n        method: 'DELETE',\r\n        headers: config.headers\r\n    })\r\n    .then( (res) => {\r\n        if (res.ok) {\r\n            return res.json();\r\n        }\r\n\r\n        return Promise.reject(`Код ошибки: ${res.status}`);\r\n    })\r\n    .catch((err) => {\r\n        console.error(err);\r\n    });\r\n};\r\n\r\n//Лайк карточки\r\n\r\nexport function likeCardDataPut (cardId) {\r\n    return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n        method: 'PUT',\r\n        headers: config.headers\r\n    })\r\n    .then( (res) => {\r\n        if (res.ok) {\r\n            return res.json();\r\n        }\r\n\r\n        return Promise.reject(`Код ошибки: ${res.status}`);\r\n    })\r\n    .catch((err) => {\r\n        console.error(err);\r\n    });\r\n};\r\n\r\n//Снятие лайка карточки\r\n\r\nexport function likeCardDataDelete (cardId) {\r\n    return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n        method: 'DELETE',\r\n        headers: config.headers\r\n    })\r\n    .then( (res) => {\r\n        if (res.ok) {\r\n            return res.json();\r\n        }\r\n\r\n        return Promise.reject(`Код ошибки: ${res.status}`);\r\n    })\r\n    .catch((err) => {\r\n        console.error(err);\r\n    });\r\n};\r\n\r\n//Обновление аватара профиля\r\n\r\nexport function profileAvatarDataPatch (link) {\r\n    return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n        method: 'PATCH',\r\n        headers: config.headers,\r\n        body: JSON.stringify({\r\n            avatar: link\r\n          })\r\n    })\r\n    .then( (res) => {\r\n        if (res.ok) {\r\n            return res.json();\r\n        }\r\n\r\n        return Promise.reject(`Код ошибки: ${res.status}`);\r\n    })\r\n    .catch((err) => {\r\n        console.error(err);\r\n    });\r\n};","import \"../pages/index.css\";\r\nimport { createCard, handleLikeClick, removeCard} from \"../components/card.js\";\r\nimport { openModal, closeModal, handleOverlayClick } from \"../components/modal.js\";\r\nimport { enableValidation, clearValidation} from \"../components/validation.js\";\r\nimport { dataInit, profileDataPatch, newCardDataPost, removeCardDataDelete, likeCardDataPut, likeCardDataDelete, profileAvatarDataPatch } from \"../components/api.js\";\r\n\r\n//Глобальные переменные\r\n\r\nconst cardsList = document.querySelector(\".places__list\");\r\nlet removeCardData;\r\nlet removeCardElement;\r\n\r\n//Триггеры открытия попапов\r\n\r\nconst addCardButton = document.querySelector(\".profile__add-button\");\r\nconst editProfileButton = document.querySelector(\".profile__edit-button\");\r\nconst editProfileAvatarButton = document.querySelector(\".profile__image\");\r\n\r\n//Попапы\r\n\r\nconst popups = document.querySelectorAll(\".popup\");\r\nconst popupAvatar = document.querySelector(\".popup_type_avatar\");\r\nconst popupEdit = document.querySelector(\".popup_type_edit\");\r\nconst popupAddCard = document.querySelector(\".popup_type_new-card\");\r\nconst popupImageWindow = document.querySelector(\".popup_type_image\");\r\nconst popupImage = popupImageWindow.querySelector(\".popup__image\");\r\nconst popupImageCaption = popupImageWindow.querySelector(\".popup__caption\");\r\nconst popupDeleteCard = document.querySelector(\".popup_type_conformation\");\r\nconst deleteCardConfirmButton = popupDeleteCard.querySelector(\".popup_confirm-button\");\r\n\r\n//Переменные форм\r\n\r\nconst avatarForm = document.forms.editAvatar;\r\nconst avatarInputLink = avatarForm.link;\r\nconst editForm = document.forms.editProfile;\r\nconst editInputName = editForm.name;\r\nconst editInputDesc = editForm.description;\r\nconst addCardForm = document.forms.newPlace;\r\nconst addCardInputName = addCardForm.placeName;\r\nconst addCardInputLink = addCardForm.link;\r\n\r\n//Переменные профиля\r\n\r\nconst profileInfoAvatar = document.querySelector(\".profile__image\");\r\nconst profileInfoName = document.querySelector(\".profile__title\");\r\nconst profileInfoDesc = document.querySelector(\".profile__description\");\r\n\r\n//Модальное окно картинки карточки\r\n\r\nfunction imageModal (card) {\r\n    popupImageCaption.textContent = card.name;\r\n    popupImage.src = card.link;\r\n    popupImage.alt = card.name;\r\n\r\n    openModal(popupImageWindow);\r\n};\r\n\r\n//Вывести карточки на страницу\r\n\r\nconst renderCards = (card, cardOwner, isLiked) => {\r\n    const newCard = createCard(card, cardOwner, isLiked, removeCardModal, handleLikeClick, imageModal, likeCardDataPut, likeCardDataDelete);\r\n\r\n    cardsList.append(newCard);\r\n};\r\n\r\n//Создание новой карточки\r\n\r\nconst createNewCard = (card, cardOwner) => {\r\n    const newCard = createCard(card, cardOwner, false, removeCardModal, handleLikeClick, imageModal, likeCardDataPut, likeCardDataDelete);\r\n\r\n    cardsList.prepend(newCard);\r\n};\r\n\r\n//Слушатели событий\r\n\r\neditProfileAvatarButton.addEventListener(\"click\", function () {\r\n    openModal(popupAvatar);\r\n    avatarForm.reset();\r\n    clearValidation(avatarForm, {\r\n        formSelector: '.popup__form',\r\n        inputSelector: '.popup__input',\r\n        submitButtonSelector: '.popup__button',\r\n        inactiveButtonClass: 'popup__button_disabled',\r\n        inputErrorClass: 'popup__input_type_error',\r\n        errorClass: 'popup__error_visible'\r\n    });\r\n});\r\n\r\naddCardButton.addEventListener(\"click\", function () {\r\n    openModal(popupAddCard);\r\n    addCardForm.reset();\r\n    clearValidation(addCardForm, {\r\n        formSelector: '.popup__form',\r\n        inputSelector: '.popup__input',\r\n        submitButtonSelector: '.popup__button',\r\n        inactiveButtonClass: 'popup__button_disabled',\r\n        inputErrorClass: 'popup__input_type_error',\r\n        errorClass: 'popup__error_visible'\r\n    });\r\n});\r\n\r\neditProfileButton.addEventListener(\"click\", function () {\r\n    openModal(popupEdit);\r\n    formInit();\r\n    clearValidation(editForm, {\r\n        formSelector: '.popup__form',\r\n        inputSelector: '.popup__input',\r\n        submitButtonSelector: '.popup__button',\r\n        inactiveButtonClass: 'popup__button_disabled',\r\n        inputErrorClass: 'popup__input_type_error',\r\n        errorClass: 'popup__error_visible'\r\n    });\r\n});\r\n\r\ndeleteCardConfirmButton.addEventListener(\"click\", function () {\r\n    removeCardDataDelete(removeCardData._id)\r\n    .then(removeCard(removeCardElement))\r\n    .catch( (err) => {\r\n    console.error(err);\r\n    });\r\n    closeModal(popupDeleteCard);\r\n});\r\n\r\n//Функция открытия модального окна удаления карточки\r\n\r\nfunction removeCardModal (evt, card) {\r\n    removeCardData = card;\r\n    removeCardElement = evt.target.closest(\".card\");\r\n\r\n    openModal(popupDeleteCard);\r\n};\r\n\r\n//Слушатели закрытия модального окна\r\n\r\npopups.forEach( (popup) => {\r\n    const popupCloseButton =  popup.querySelector(\".popup__close\");\r\n\r\n    popupCloseButton.addEventListener(\"click\", function () {\r\n        closeModal(popup);\r\n    });\r\n    popup.addEventListener(\"mousedown\", handleOverlayClick);\r\n});\r\n\r\n//Слушатели отправки формы\r\n\r\neditForm.addEventListener('submit', handleEditProfileFormSubmit);\r\n\r\naddCardForm.addEventListener('submit', handleAddCardFormSubmit);\r\n\r\navatarForm.addEventListener('submit', handleEditAvatarSubmit);\r\n\r\n//Иницилизация формы\r\n\r\nfunction formInit () {\r\n    editInputName.value = profileInfoName.textContent;\r\n    editInputDesc.value = profileInfoDesc.textContent;\r\n};\r\n\r\n//Обработчики отправки форм\r\n\r\nfunction handleEditProfileFormSubmit (event) {\r\n    const currentButton = popupEdit.querySelector(\".button\");\r\n    \r\n    event.preventDefault();\r\n    currentButton.textContent = \"Сохранение...\"\r\n    profileDataPatch(editInputName.value, editInputDesc.value)\r\n    .then( (res) => {\r\n        profileInfoName.textContent = res.name;\r\n        profileInfoDesc.textContent = res.about;\r\n    })\r\n    .catch( (err) => {\r\n        console.error(err);\r\n    })\r\n    .finally( () => {\r\n        currentButton.textContent = \"Сохранение\";\r\n        closeModal(popupEdit);\r\n    })\r\n};\r\n\r\nfunction handleAddCardFormSubmit (event) {\r\n    const currentButton = popupAddCard.querySelector('.button');\r\n    \r\n    event.preventDefault();\r\n    currentButton.textContent = \"Сохранение...\";\r\n    newCardDataPost(addCardInputName.value, addCardInputLink.value)\r\n    .then( (res) => {\r\n        createNewCard(res, true);\r\n    })\r\n    .catch( (err) => {\r\n    console.error(err);\r\n    })\r\n    .finally( () => {\r\n        clearValidation(addCardForm, {\r\n            submitButtonSelector: '.popup__button',\r\n            inactiveButtonClass: 'popup__button_disabled'\r\n        });\r\n        currentButton.textContent = \"Сохранение\";\r\n        closeModal(popupAddCard);\r\n    })\r\n};\r\n\r\nfunction handleEditAvatarSubmit (event) {\r\n    const currentButton = popupAvatar.querySelector(\".button\");\r\n    \r\n    event.preventDefault();\r\n    currentButton.textContent = \"Сохранение...\";\r\n    profileAvatarDataPatch(avatarInputLink.value)\r\n    .then( (res) => {\r\n        profileInfoAvatar.setAttribute('style', `background-image: url(${res.avatar})`);\r\n    })\r\n    .catch( (err) => {\r\n        console.error(err);\r\n    })\r\n    .finally( () => {\r\n        currentButton.textContent = \"Сохранение\";\r\n        closeModal(popupAvatar);\r\n    })\r\n};\r\n\r\n//Активация валидации форм\r\n\r\nenableValidation({\r\n    formSelector: '.popup__form',\r\n    inputSelector: '.popup__input',\r\n    submitButtonSelector: '.popup__button',\r\n    inactiveButtonClass: 'popup__button_disabled',\r\n    inputErrorClass: 'popup__input_type_error',\r\n    errorClass: 'popup__error_visible'\r\n});\r\n\r\n//Иницилизация данных страницы\r\n\r\ndataInit()\r\n.then( (res) => {\r\n    const profileData = res[0];\r\n    const cardsData = res[1];\r\n\r\n    profileInfoAvatar.setAttribute(\"style\", `background-image: url(${profileData.avatar})`);\r\n    profileInfoName.textContent = profileData.name;\r\n    profileInfoDesc.textContent = profileData.about;\r\n\r\n    cardsData.forEach( (card) => {\r\n        const ownedCard = profileData._id === card.owner._id;\r\n        const likeId = (like) => like._id === profileData._id;\r\n        const isLiked = card.likes.flat().some(likeId);\r\n\r\n        renderCards(card, ownedCard, isLiked);\r\n    })\r\n})\r\n.catch( (err) => {\r\n    console.error(err);\r\n});"],"names":["createCard","card","cardOwner","isLiked","removeCardModal","likeClick","imageOpen","likeDataPut","likeDataDelete","cardElement","document","querySelector","content","cloneNode","cardImage","cardTitle","removeButton","likeButton","likeValue","textContent","name","src","link","alt","likes","length","addEventListener","evt","remove","classList","add","event","_id","handleLikeClick","cardId","likeCounter","target","contains","then","res","catch","err","console","error","openModal","popupElement","window","handleEscapePress","closeModal","removeEventListener","handleOverlayClick","currentTarget","key","clearValidation","formElement","validationConfig","inputList","Array","from","querySelectorAll","inputSelector","buttonElement","submitButtonSelector","forEach","inputElement","hideInputError","toggleButtonState","errorElement","concat","id","inputErrorClass","errorClass","some","validity","valid","hasInvalidInput","disabled","inactiveButtonClass","config","baseUrl","headers","authorization","likeCardDataPut","fetch","method","ok","json","Promise","reject","status","likeCardDataDelete","removeCardData","removeCardElement","cardsList","addCardButton","editProfileButton","editProfileAvatarButton","popups","popupAvatar","popupEdit","popupAddCard","popupImageWindow","popupImage","popupImageCaption","popupDeleteCard","deleteCardConfirmButton","avatarForm","forms","editAvatar","avatarInputLink","editForm","editProfile","editInputName","editInputDesc","description","addCardForm","newPlace","addCardInputName","placeName","addCardInputLink","profileInfoAvatar","profileInfoName","profileInfoDesc","imageModal","closest","reset","formSelector","value","popup","profileName","profileAbout","currentButton","preventDefault","body","JSON","stringify","about","finally","cardName","cardLink","newCard","prepend","avatar","setAttribute","patternMismatch","setCustomValidity","dataset","errorMessage","showInputError","validationMessage","formIsValid","setEventListeners","all","profileData","cardsData","ownedCard","owner","flat","like","append","renderCards"],"sourceRoot":""}